{"version":3,"sources":["components/List/index.js","components/Container/index.js","components/SearchBar/index.js","App.js","serviceWorker.js","index.js"],"names":["List","props","employee","employees","Table","striped","bordered","hover","variant","onClick","handleSortSelect","data-tag","map","item","key","id","Image","alt","name","src","image","roundedCircle","fluid","occupation","location","Wrapper","Container","children","SearchBar","Navbar","bg","Brand","Form","inline","FormControl","type","onKeyPress","e","preventDefault","placeholder","className","onChange","handleInputChange","value","Button","handleFormSubmit","App","state","search","sortName","sortLoc","sortOcc","searchName","query","arrEmployees","filter","res","toLowerCase","includes","console","log","setState","alert","sort","a","b","nameA","nameB","reverse","event","target","getAttribute","Jumbotron","this","Component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+pFA0CeA,MAtCf,SAAcC,GAEZ,IAAMC,EAAWD,EAAME,UAEvB,OACE,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,QACpC,+BACE,4BACE,2CACA,wBACEC,QAASR,EAAMS,iBACfC,WAAS,QAFX,qBAIA,wBACEF,QAASR,EAAMS,iBACfC,WAAS,QAFX,qBAIA,wBACEF,QAASR,EAAMS,iBACfC,WAAS,iBAFX,gCAMJ,+BACGT,EAASU,KAAI,SAAAC,GAAI,OAChB,wBAAIC,IAAKD,EAAKE,IACZ,4BAAI,kBAACC,EAAA,EAAD,CAAOC,IAAKJ,EAAKK,KAAMC,IAAKN,EAAKO,MAAOC,eAAa,EAACC,OAAK,KAC/D,4BAAKT,EAAKK,MACV,4BAAKL,EAAKU,YACV,4BAAKV,EAAKW,iB,QCrBPC,MATf,SAAiBxB,GACb,OACI,kBAACyB,EAAA,EAAD,CAAWJ,OAAK,GACXrB,EAAM0B,W,sCCoBJC,MAtBf,SAAmB3B,GACf,OACI,kBAAC4B,EAAA,EAAD,CAAQC,GAAG,QAAQtB,QAAQ,SACvB,kBAACqB,EAAA,EAAOE,MAAR,oBACA,kBAACC,EAAA,EAAD,CAAMC,QAAM,GACR,kBAACC,EAAA,EAAD,CACIC,KAAK,OACLC,WAAY,SAACC,GAAkB,UAAVA,EAAEvB,KAAmBuB,EAAEC,kBAC5CC,YAAY,OACZC,UAAU,UACVC,SAAUxC,EAAMyC,kBAChBC,MAAO1C,EAAM0C,MACbzB,KAAK,WACT,kBAAC0B,EAAA,EAAD,CACApC,QAAQ,kBACRC,QAASR,EAAM4C,kBAFf,a,wBC0JDC,E,4MAlKbC,MAAQ,CACN5C,UAAWA,EACX6C,OAAQ,GACRC,UAAU,EACVC,SAAS,EACTC,SAAS,G,EAGXC,WAAa,SAAAC,GACX,IAAIC,EAAe,EAAKP,MAAM5C,UAG9B,OAFAmD,EAAeA,EAAaC,QAAO,SAAAC,GAAG,OAAIA,EAAItC,KAAKuC,cAAcC,SAASL,EAAMI,kBAChFE,QAAQC,IAAIN,GACE,KAAVD,GACFM,QAAQC,IAAI,YACZ,EAAKC,SAAS,CAAE1D,UAAWA,SAC3B,EAAK0D,SAAS,CAAEb,OAAQ,MAEdM,OAQV,EAAKO,SAAS,CAAE1D,UAAWmD,KAP3B,EAAKO,SAAS,CAAEb,OAAQ,KACxB,EAAKa,SAAS,CAAE1D,UAAWA,IAC3BwD,QAAQC,IAAIzD,GACZwD,QAAQC,IAAI,kBACZE,MAAM,c,EAOVC,KAAO,SAAAV,GACL,IAAIC,EAAe,EAAKP,MAAM5C,UAG9B,GAFAwD,QAAQC,IAAI,WACZD,QAAQC,IAAIP,GACE,kBAAVA,EAA2B,CAU7B,GATAC,EAAeA,EAAaS,MAAK,SAAUC,EAAGC,GAC5CN,QAAQC,IAAI,wBACZ,IAAIM,EAAQF,EAAExC,SAASiC,cAAeU,EAAQF,EAAEzC,SAASiC,cACzD,OAAIS,EAAQC,GACF,EACND,EAAQC,EACH,EACF,MAEkB,IAAvB,EAAKpB,MAAMG,QAIb,OAHA,EAAKW,SAAS,CAAEX,SAAS,IACzB,EAAKW,SAAS,CAAE1D,UAAWmD,SAC3BK,QAAQC,IAAI,oBAGd,IAA2B,IAAvB,EAAKb,MAAMG,QAKb,OAJAI,EAAeA,EAAac,UAC5B,EAAKP,SAAS,CAAEX,SAAS,IACzB,EAAKW,SAAS,CAAE1D,UAAWmD,SAC3BK,QAAQC,IAAI,qBAGdD,QAAQC,IAAI,sBACZD,QAAQC,IAAIN,GAGd,GAAc,SAAVD,EAAkB,CAUpB,GATAC,EAAeA,EAAaS,MAAK,SAAUC,EAAGC,GAC5CN,QAAQC,IAAI,yBACZ,IAAIM,EAAQF,EAAEzC,WAAWkC,cAAeU,EAAQF,EAAE1C,WAAWkC,cAC7D,OAAIS,EAAQC,GACF,EACND,EAAQC,EACH,EACF,MAEkB,IAAvB,EAAKpB,MAAMI,QAIb,OAHA,EAAKU,SAAS,CAAEV,SAAS,IACzB,EAAKU,SAAS,CAAE1D,UAAWmD,SAC3BK,QAAQC,IAAI,oBAGd,IAA2B,IAAvB,EAAKb,MAAMI,QAKb,OAJAG,EAAeA,EAAac,UAC5B,EAAKP,SAAS,CAAEV,SAAS,IACzB,EAAKU,SAAS,CAAE1D,UAAWmD,SAC3BK,QAAQC,IAAI,qBAGdD,QAAQC,IAAI,sBACZD,QAAQC,IAAIN,GAGd,GAAc,SAAVD,EAAkB,CAUpB,GATAC,EAAeA,EAAaS,MAAK,SAAUC,EAAGC,GAC5CN,QAAQC,IAAI,yBACZ,IAAIM,EAAQF,EAAE9C,KAAKuC,cAAeU,EAAQF,EAAE/C,KAAKuC,cACjD,OAAIS,EAAQC,GACF,EACND,EAAQC,EACH,EACF,MAEmB,IAAxB,EAAKpB,MAAME,SAIb,OAHA,EAAKY,SAAS,CAAEZ,UAAU,IAC1B,EAAKY,SAAS,CAAE1D,UAAWmD,SAC3BK,QAAQC,IAAI,qBAGd,IAA4B,IAAxB,EAAKb,MAAME,SAKb,OAJAK,EAAeA,EAAac,UAC5B,EAAKP,SAAS,CAAEZ,UAAU,IAC1B,EAAKY,SAAS,CAAE1D,UAAWmD,SAC3BK,QAAQC,IAAI,sBAGdD,QAAQC,IAAI,uBACZD,QAAQC,IAAIN,K,EAIhBZ,kBAAoB,SAAA2B,GAClB,IAAM1B,EAAQ0B,EAAMC,OAAO3B,MACrBzB,EAAOmD,EAAMC,OAAOpD,KAC1B,EAAK2C,SAAL,eACG3C,EAAOyB,K,EAIZjC,iBAAmB,SAAA2D,GACjBA,EAAM/B,iBACNqB,QAAQC,IAAI,WAEZ,IAAMjB,EAAQ0B,EAAMC,OAAOC,aAAa,YACxCZ,QAAQC,IAAIjB,GACZ,EAAKoB,KAAKpB,I,EAGZE,iBAAmB,SAAAwB,GACjBA,EAAM/B,iBACN,EAAKc,WAAW,EAAKL,MAAMC,S,uDAI3B,OACE,kBAAC,EAAD,KACE,kBAACwB,EAAA,EAAD,CAAWlD,OAAK,GACd,kBAACI,EAAA,EAAD,KACE,2CACA,qHAGA,gQAGD,2JAKH,kBAAC,EAAD,CAAWiB,MAAO8B,KAAK1B,MAAMC,OAC3BN,kBAAmB+B,KAAK/B,kBACxBG,iBAAkB4B,KAAK5B,mBACzB,kBAAC,EAAD,CAAM1C,UAAWsE,KAAK1B,MAAM5C,UAAWO,iBAAkB+D,KAAK/D,wB,GA9JpDgE,aCIEC,QACW,cAA7BC,OAAOpD,SAASqD,UAEe,UAA7BD,OAAOpD,SAASqD,UAEhBD,OAAOpD,SAASqD,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhC,QAAQgC,MAAMA,EAAMC,c","file":"static/js/main.6f492aa1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Table, Image } from 'react-bootstrap'\nimport \"./style.css\";\n\nfunction List(props) {\n\n  const employee = props.employees\n\n  return (\n    <Table striped bordered hover variant=\"dark\">\n      <thead>\n        <tr>\n          <th>Profile Pic</th>\n          <th\n            onClick={props.handleSortSelect}\n            data-tag=\"Name\"\n          >Name ðŸ”€</th>\n          <th\n            onClick={props.handleSortSelect}\n            data-tag=\"Role\"\n          >Role ðŸ”€</th>\n          <th\n            onClick={props.handleSortSelect}\n            data-tag=\"Work Location\"\n          >Work Location ðŸ”€</th>\n        </tr>\n      </thead>\n      <tbody>\n        {employee.map(item => (\n          <tr key={item.id}>\n            <td><Image alt={item.name} src={item.image} roundedCircle fluid /></td>\n            <td>{item.name}</td>\n            <td>{item.occupation}</td>\n            <td>{item.location}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n\n  );\n}\n\nexport default List;","import React from \"react\";\r\nimport { Container } from 'react-bootstrap'\r\n\r\nfunction Wrapper(props) {\r\n    return (\r\n        <Container fluid>\r\n            {props.children}\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\nimport { Navbar, Form, Button, FormControl } from 'react-bootstrap'\nimport \"./style.css\";\n\nfunction SearchBar(props) {\n    return (\n        <Navbar bg=\"light\" variant=\"light\">\n            <Navbar.Brand >My-Employee</Navbar.Brand>\n            <Form inline>\n                <FormControl\n                    type=\"text\"\n                    onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }}\n                    placeholder=\"Name\"\n                    className=\"mr-sm-2\"\n                    onChange={props.handleInputChange}\n                    value={props.value}\n                    name=\"search\" />\n                <Button \n                variant=\"outline-primary\" \n                onClick={props.handleFormSubmit}>Search</Button>\n            </Form>\n        </Navbar>\n\n    );\n}\n\nexport default SearchBar;","import React, { Component } from \"react\";\nimport List from './components/List'\nimport Wrapper from './components/Container'\nimport SearchBar from './components/SearchBar'\nimport employees from './utils/employees.json'\nimport './App.css';\nimport { Jumbotron, Container } from 'react-bootstrap'\n\nclass App extends Component {\n  state = {\n    employees: employees,\n    search: '',\n    sortName: true,\n    sortLoc: true,\n    sortOcc: true\n  }\n\n  searchName = query => {\n    let arrEmployees = this.state.employees;\n    arrEmployees = arrEmployees.filter(res => res.name.toLowerCase().includes(query.toLowerCase()));\n    console.log(arrEmployees);\n    if (query === \"\") {\n      console.log(\"No Query\")\n      this.setState({ employees: employees });\n      this.setState({ search: \"\" })\n      return;\n    } else if (!arrEmployees) {\n      this.setState({ search: \"\" })\n      this.setState({ employees: employees });\n      console.log(employees)\n      console.log(\"No search\")\n      alert(\"No Match\");\n      return;\n    } else {\n      this.setState({ employees: arrEmployees });\n    }\n  };\n\n  sort = query => {\n    let arrEmployees = this.state.employees;\n    console.log(\"Sorting\");\n    console.log(query);\n    if (query === \"Work Location\") {\n      arrEmployees = arrEmployees.sort(function (a, b) {\n        console.log(\"in sort function-Loc\");\n        let nameA = a.location.toLowerCase(), nameB = b.location.toLowerCase();\n        if (nameA < nameB) //sort string ascending\n          return -1\n        if (nameA > nameB)\n          return 1\n        return 0\n      });\n      if (this.state.sortLoc === true) {\n        this.setState({ sortLoc: false })\n        this.setState({ employees: arrEmployees });\n        console.log(\"in true sort LOC\");\n        return;\n      }\n      if (this.state.sortLoc === false) {\n        arrEmployees = arrEmployees.reverse();\n        this.setState({ sortLoc: true })\n        this.setState({ employees: arrEmployees });\n        console.log(\"in false sort LOC\");\n        return;\n      }\n      console.log(\"in sort query3-LOC\");\n      console.log(arrEmployees);\n    }\n\n    if (query === \"Role\") {\n      arrEmployees = arrEmployees.sort(function (a, b) {\n        console.log(\"in sort function-role\")\n        let nameA = a.occupation.toLowerCase(), nameB = b.occupation.toLowerCase()\n        if (nameA < nameB) //sort string ascending\n          return -1\n        if (nameA > nameB)\n          return 1\n        return 0\n      })\n      if (this.state.sortOcc === true) {\n        this.setState({ sortOcc: false })\n        this.setState({ employees: arrEmployees });\n        console.log(\"in true sort OCC\");\n        return;\n      }\n      if (this.state.sortOcc === false) {\n        arrEmployees = arrEmployees.reverse();\n        this.setState({ sortOcc: true })\n        this.setState({ employees: arrEmployees });\n        console.log(\"in false sort OCC\");\n        return;\n      }\n      console.log(\"in sort query2-OCC\")\n      console.log(arrEmployees)\n    }\n\n    if (query === \"Name\") {\n      arrEmployees = arrEmployees.sort(function (a, b) {\n        console.log(\"in sort function-name\")\n        let nameA = a.name.toLowerCase(), nameB = b.name.toLowerCase()\n        if (nameA < nameB) //sort string ascending\n          return -1\n        if (nameA > nameB)\n          return 1\n        return 0\n      })\n      if (this.state.sortName === true) {\n        this.setState({ sortName: false })\n        this.setState({ employees: arrEmployees });\n        console.log(\"in true sort NAME\");\n        return;\n      }\n      if (this.state.sortName === false) {\n        arrEmployees = arrEmployees.reverse();\n        this.setState({ sortName: true })\n        this.setState({ employees: arrEmployees });\n        console.log(\"in false sort NAME\");\n        return;\n      }\n      console.log(\"in sort query1-NAME\")\n      console.log(arrEmployees)\n    }\n  }\n\n  handleInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSortSelect = event => {\n    event.preventDefault();\n    console.log(\"Clicked\")\n\n    const value = event.target.getAttribute('data-tag');\n    console.log(value)\n    this.sort(value);\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchName(this.state.search);\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Jumbotron fluid>\n          <Container>\n            <h1>My-Employee</h1>\n            <p>\n              Use My-Employee to sort by clicking the heading or search by name in the \"Search\" bar.\n            </p>\n            <p>\n              NOTES: The search name does \"NOT\" need to be an exact match to show in the list and the search may return mulitiple answers.  You can also return the full list after a search by having a blank search input and clicking search\n           </p>\n           <p>\n           ðŸ”€ indicates ability to sort.  Click the heading to sort and then click a second time to reverse order the sort.\n           </p>\n          </Container>\n        </Jumbotron>\n        <SearchBar value={this.state.search}\n          handleInputChange={this.handleInputChange}\n          handleFormSubmit={this.handleFormSubmit} />\n        <List employees={this.state.employees} handleSortSelect={this.handleSortSelect} />\n      </Wrapper>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}